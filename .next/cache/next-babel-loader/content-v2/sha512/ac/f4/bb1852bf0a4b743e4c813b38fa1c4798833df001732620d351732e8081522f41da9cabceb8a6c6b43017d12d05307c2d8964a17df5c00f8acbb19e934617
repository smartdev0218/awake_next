{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\projects\\\\4.23\\\\awake-nextjs-refactored1\\\\src\\\\context\\\\user-info.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useMemo, useState } from 'react';\nexport var UserInfoContext = /*#__PURE__*/createContext({});\nUserInfoContext.displayName = 'UserInfoContext';\nexport var UserInfoProvider = function UserInfoProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(null),\n      phoneNumber = _useState[0],\n      setPhoneNumber = _useState[1];\n\n  var _useState2 = useState(null),\n      verificationCode = _useState2[0],\n      setVerificationCode = _useState2[1];\n\n  var _useState3 = useState(null),\n      userName = _useState3[0],\n      setUserName = _useState3[1];\n\n  var value = useMemo(function () {\n    return {\n      phoneNumber: phoneNumber,\n      setPhoneNumber: setPhoneNumber,\n      verificationCode: verificationCode,\n      setVerificationCode: setVerificationCode,\n      userName: userName,\n      setUserName: setUserName\n    };\n  }, [phoneNumber, setPhoneNumber, verificationCode, setVerificationCode, userName, setUserName]);\n  return /*#__PURE__*/_jsxDEV(UserInfoContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(UserInfoProvider, \"AaDo0qLXJ5cRkS7WyGyOYwPVADI=\");\n\n_c = UserInfoProvider;\nexport var useUserInfo = function useUserInfo() {\n  _s2();\n\n  var context = useContext(UserInfoContext);\n\n  if (context === undefined) {\n    throw new Error('useUserInfo hook must be used within a UserInfoProvider component');\n  }\n\n  return context;\n};\n\n_s2(useUserInfo, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"UserInfoProvider\");","map":{"version":3,"sources":["E:/projects/4.23/awake-nextjs-refactored1/src/context/user-info.tsx"],"names":["createContext","useContext","useMemo","useState","UserInfoContext","displayName","UserInfoProvider","children","phoneNumber","setPhoneNumber","verificationCode","setVerificationCode","userName","setUserName","value","useUserInfo","context","undefined","Error"],"mappings":";;;;;;;AAAA,SAASA,aAAT,EAA4BC,UAA5B,EAAwCC,OAAxC,EAAiDC,QAAjD,QAAiE,OAAjE;AAWA,OAAO,IAAMC,eAAe,gBAAGJ,aAAa,CAC1C,EAD0C,CAArC;AAIPI,eAAe,CAACC,WAAhB,GAA8B,iBAA9B;AAEA,OAAO,IAAMC,gBAAoB,GAAG,SAAvBA,gBAAuB,OAAkB;AAAA;;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBACdJ,QAAQ,CAAgB,IAAhB,CADM;AAAA,MAC7CK,WAD6C;AAAA,MAChCC,cADgC;;AAAA,mBAEJN,QAAQ,CAAgB,IAAhB,CAFJ;AAAA,MAE7CO,gBAF6C;AAAA,MAE3BC,mBAF2B;;AAAA,mBAGpBR,QAAQ,CAAgB,IAAhB,CAHY;AAAA,MAG7CS,QAH6C;AAAA,MAGnCC,WAHmC;;AAKpD,MAAMC,KAAK,GAAGZ,OAAO,CACnB;AAAA,WAAO;AACLM,MAAAA,WAAW,EAAXA,WADK;AAELC,MAAAA,cAAc,EAAdA,cAFK;AAGLC,MAAAA,gBAAgB,EAAhBA,gBAHK;AAILC,MAAAA,mBAAmB,EAAnBA,mBAJK;AAKLC,MAAAA,QAAQ,EAARA,QALK;AAMLC,MAAAA,WAAW,EAAXA;AANK,KAAP;AAAA,GADmB,EASnB,CACEL,WADF,EAEEC,cAFF,EAGEC,gBAHF,EAIEC,mBAJF,EAKEC,QALF,EAMEC,WANF,CATmB,CAArB;AAmBA,sBACE,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAEC,KAAjC;AAAA,cACGP;AADH;AAAA;AAAA;AAAA;AAAA,WADF;AAKD,CA7BM;;GAAMD,gB;;KAAAA,gB;AA+Bb,OAAO,IAAMS,WAAW,GAAG,SAAdA,WAAc,GAAwB;AAAA;;AACjD,MAAMC,OAAO,GAAGf,UAAU,CAACG,eAAD,CAA1B;;AACA,MAAIY,OAAO,KAAKC,SAAhB,EAA2B;AACzB,UAAM,IAAIC,KAAJ,CACJ,mEADI,CAAN;AAGD;;AACD,SAAOF,OAAP;AACD,CARM;;IAAMD,W","sourcesContent":["import { createContext, FC, useContext, useMemo, useState } from 'react'\r\n\r\nexport interface IUserInfoContext {\r\n  phoneNumber: string | null\r\n  setPhoneNumber: (phone: string | null) => void\r\n  userName: string | null\r\n  setUserName: (userName: string | null) => void\r\n  verificationCode: string | null\r\n  setVerificationCode: (verificationCode: string | null) => void\r\n}\r\n\r\nexport const UserInfoContext = createContext<IUserInfoContext>(\r\n  {} as IUserInfoContext\r\n)\r\n\r\nUserInfoContext.displayName = 'UserInfoContext'\r\n\r\nexport const UserInfoProvider: FC = ({ children }) => {\r\n  const [phoneNumber, setPhoneNumber] = useState<string | null>(null)\r\n  const [verificationCode, setVerificationCode] = useState<string | null>(null)\r\n  const [userName, setUserName] = useState<string | null>(null)\r\n\r\n  const value = useMemo(\r\n    () => ({\r\n      phoneNumber,\r\n      setPhoneNumber,\r\n      verificationCode,\r\n      setVerificationCode,\r\n      userName,\r\n      setUserName,\r\n    }),\r\n    [\r\n      phoneNumber,\r\n      setPhoneNumber,\r\n      verificationCode,\r\n      setVerificationCode,\r\n      userName,\r\n      setUserName,\r\n    ]\r\n  )\r\n\r\n  return (\r\n    <UserInfoContext.Provider value={value}>\r\n      {children}\r\n    </UserInfoContext.Provider>\r\n  )\r\n}\r\n\r\nexport const useUserInfo = (): IUserInfoContext => {\r\n  const context = useContext(UserInfoContext)\r\n  if (context === undefined) {\r\n    throw new Error(\r\n      'useUserInfo hook must be used within a UserInfoProvider component'\r\n    )\r\n  }\r\n  return context\r\n}\r\n"]},"metadata":{},"sourceType":"module"}