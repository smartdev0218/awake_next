{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\projects\\\\4.23\\\\awake-nextjs-refactored1\\\\src\\\\context\\\\auth.tsx\",\n    _getIntialState,\n    _initialState$jwt;\n\nimport { createContext, useContext, useEffect, useMemo, useState } from 'react';\nimport cookieCutter from 'cookie-cutter';\nimport { axiosClient, setAuthTokenHeaders } from 'utils/axios-client';\nimport { getIntialState, persistState } from 'utils/persisted-state';\nconst STORAGE_KEY = 'awake-auth';\nconst defaultState = {};\nconst initialState = (_getIntialState = getIntialState(STORAGE_KEY)) !== null && _getIntialState !== void 0 ? _getIntialState : defaultState;\nsetAuthTokenHeaders((_initialState$jwt = initialState.jwt) !== null && _initialState$jwt !== void 0 ? _initialState$jwt : '');\nexport const AuthContext = /*#__PURE__*/createContext({});\nAuthContext.displayName = 'AuthContext';\nexport const AuthProvider = ({\n  children\n}) => {\n  var _initialState$user, _initialState$jwt2;\n\n  const {\n    0: user,\n    1: setUser\n  } = useState((_initialState$user = initialState.user) !== null && _initialState$user !== void 0 ? _initialState$user : null);\n  const {\n    0: jwt,\n    1: setJwt\n  } = useState((_initialState$jwt2 = initialState.jwt) !== null && _initialState$jwt2 !== void 0 ? _initialState$jwt2 : null);\n\n  const signInWithSMS = data => axiosClient.post(`send-sms-code`, data);\n\n  const confirmSMS = data => axiosClient.post(`confirm-sms-code`, data).then(({\n    data\n  }) => {\n    const user = data.user;\n    const jwt = data.jwt;\n    setUser(user);\n    setJwt(jwt);\n    cookieCutter.set('jwt', jwt);\n    setAuthTokenHeaders(jwt);\n    return data;\n  }).catch(err => {\n    alert(err.message);\n  });\n\n  const logout = () => {\n    cookieCutter.set('jwt', null);\n    setAuthTokenHeaders(null);\n    setJwt(null);\n    setUser(null);\n    window.location.href = '/';\n  };\n\n  const fetchUser = () => {\n    axiosClient.post('fetch-user').then(({\n      data\n    }) => {\n      setUser(data);\n    }).catch(() => {\n      setUser(null);\n    });\n  };\n\n  const updateUser = data => {\n    axiosClient.post('update-user', data).then(({\n      data\n    }) => {\n      setUser(data);\n    }).catch(err => {\n      console.error(err);\n      alert(err.message);\n    });\n  };\n\n  const value = useMemo(() => ({\n    user,\n    setUser,\n    jwt,\n    setJwt,\n    signInWithSMS,\n    confirmSMS,\n    logout,\n    fetchUser,\n    updateUser\n  }), [user, setUser, jwt, setJwt, signInWithSMS, confirmSMS, logout, fetchUser, updateUser]);\n  useEffect(() => persistState(STORAGE_KEY, {\n    jwt,\n    user\n  }), [jwt, user]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 10\n  }, this);\n};\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n\n  if (context === undefined) {\n    throw new Error('useAuth hook must be used within a AuthProvider component');\n  }\n\n  return context;\n};","map":{"version":3,"sources":["E:/projects/4.23/awake-nextjs-refactored1/src/context/auth.tsx"],"names":["createContext","useContext","useEffect","useMemo","useState","cookieCutter","axiosClient","setAuthTokenHeaders","getIntialState","persistState","STORAGE_KEY","defaultState","initialState","jwt","AuthContext","displayName","AuthProvider","children","user","setUser","setJwt","signInWithSMS","data","post","confirmSMS","then","set","catch","err","alert","message","logout","window","location","href","fetchUser","updateUser","console","error","value","useAuth","context","undefined","Error"],"mappings":"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","sourcesContent":["import {\r\n  createContext,\r\n  FC,\r\n  useContext,\r\n  useEffect,\r\n  useMemo,\r\n  useState,\r\n} from 'react'\r\nimport cookieCutter from 'cookie-cutter'\r\n\r\nimport { User } from 'models'\r\nimport { axiosClient, setAuthTokenHeaders } from 'utils/axios-client'\r\nimport { getIntialState, persistState } from 'utils/persisted-state'\r\n\r\nconst STORAGE_KEY = 'awake-auth'\r\n\r\nexport interface IAuthContext {\r\n  user: User | null\r\n  setUser: (user: User | null) => void\r\n  jwt: string | null\r\n  setJwt: (jwt: string | null) => void\r\n  signInWithSMS: (data: any) => Promise<any>\r\n  confirmSMS: (data: any) => Promise<any>\r\n  logout: () => void\r\n  fetchUser: () => void\r\n  updateUser: (data: any) => void\r\n}\r\n\r\nconst defaultState = {}\r\n\r\nconst initialState = getIntialState(STORAGE_KEY) ?? defaultState\r\n\r\nsetAuthTokenHeaders(initialState.jwt ?? '')\r\n\r\nexport const AuthContext = createContext<IAuthContext>({} as IAuthContext)\r\n\r\nAuthContext.displayName = 'AuthContext'\r\n\r\nexport const AuthProvider: FC = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(initialState.user ?? null)\r\n  const [jwt, setJwt] = useState<string | null>(initialState.jwt ?? null)\r\n\r\n  const signInWithSMS = (data) => axiosClient.post(`send-sms-code`, data)\r\n\r\n  const confirmSMS = (data) =>\r\n    axiosClient\r\n      .post(`confirm-sms-code`, data)\r\n      .then(({ data }) => {\r\n        const user = data.user as User\r\n        const jwt = data.jwt as string\r\n\r\n        setUser(user)\r\n        setJwt(jwt)\r\n        cookieCutter.set('jwt', jwt)\r\n        setAuthTokenHeaders(jwt)\r\n\r\n        return data\r\n      })\r\n      .catch((err) => {\r\n        alert(err.message)\r\n      })\r\n\r\n  const logout = () => {\r\n    cookieCutter.set('jwt', null)\r\n    setAuthTokenHeaders(null)\r\n    setJwt(null)\r\n    setUser(null)\r\n    window.location.href = '/'\r\n  }\r\n\r\n  const fetchUser = () => {\r\n    axiosClient\r\n      .post('fetch-user')\r\n      .then(({ data }) => {\r\n        setUser(data)\r\n      })\r\n      .catch(() => {\r\n        setUser(null)\r\n      })\r\n  }\r\n\r\n  const updateUser = (data: any) => {\r\n    axiosClient\r\n      .post('update-user', data)\r\n      .then(({ data }) => {\r\n        setUser(data)\r\n      })\r\n      .catch((err) => {\r\n        console.error(err)\r\n        alert(err.message)\r\n      })\r\n  }\r\n\r\n  const value = useMemo(\r\n    () => ({\r\n      user,\r\n      setUser,\r\n      jwt,\r\n      setJwt,\r\n      signInWithSMS,\r\n      confirmSMS,\r\n      logout,\r\n      fetchUser,\r\n      updateUser,\r\n    }),\r\n    [\r\n      user,\r\n      setUser,\r\n      jwt,\r\n      setJwt,\r\n      signInWithSMS,\r\n      confirmSMS,\r\n      logout,\r\n      fetchUser,\r\n      updateUser,\r\n    ]\r\n  )\r\n\r\n  useEffect(() => persistState(STORAGE_KEY, { jwt, user }), [jwt, user])\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>\r\n}\r\n\r\nexport const useAuth = (): IAuthContext => {\r\n  const context = useContext(AuthContext)\r\n  if (context === undefined) {\r\n    throw new Error('useAuth hook must be used within a AuthProvider component')\r\n  }\r\n  return context\r\n}\r\n"]},"metadata":{},"sourceType":"module"}