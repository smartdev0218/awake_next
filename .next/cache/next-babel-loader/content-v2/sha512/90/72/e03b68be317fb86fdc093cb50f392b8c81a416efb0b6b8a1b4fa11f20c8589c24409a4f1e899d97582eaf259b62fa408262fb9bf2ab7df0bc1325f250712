{"ast":null,"code":"export var persistState = function persistState(storageKey, state) {\n  if (true) {\n    window.localStorage.setItem(storageKey, JSON.stringify(state));\n  }\n};\nexport var getIntialState = function getIntialState(storageKey) {\n  if (true) {\n    var savedState = window.localStorage.getItem(storageKey);\n\n    try {\n      if (!savedState) {\n        return undefined;\n      }\n\n      return JSON.parse(savedState !== null && savedState !== void 0 ? savedState : '{}');\n    } catch (e) {\n      console.error('Error loading state : ' + storageKey);\n      return undefined;\n    }\n  }\n};","map":{"version":3,"sources":["E:/projects/4.23/awake-nextjs-refactored1/src/utils/persisted-state.ts"],"names":["persistState","storageKey","state","window","localStorage","setItem","JSON","stringify","getIntialState","savedState","getItem","undefined","parse","e","console","error"],"mappings":"AAAA,OAAO,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAACC,UAAD,EAAqBC,KAArB,EAA6C;AACvE,YAAmC;AACjCC,IAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BJ,UAA5B,EAAwCK,IAAI,CAACC,SAAL,CAAeL,KAAf,CAAxC;AACD;AACF,CAJM;AAMP,OAAO,IAAMM,cAAc,GAAG,SAAjBA,cAAiB,CAACP,UAAD,EAA6B;AACzD,YAAmC;AACjC,QAAMQ,UAAU,GAAGN,MAAM,CAACC,YAAP,CAAoBM,OAApB,CAA4BT,UAA5B,CAAnB;;AACA,QAAI;AACF,UAAI,CAACQ,UAAL,EAAiB;AACf,eAAOE,SAAP;AACD;;AACD,aAAOL,IAAI,CAACM,KAAL,CAAWH,UAAX,aAAWA,UAAX,cAAWA,UAAX,GAAyB,IAAzB,CAAP;AACD,KALD,CAKE,OAAOI,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,2BAA2Bd,UAAzC;AACA,aAAOU,SAAP;AACD;AACF;AACF,CAbM","sourcesContent":["export const persistState = (storageKey: string, state: object): void => {\r\n  if (typeof window !== 'undefined') {\r\n    window.localStorage.setItem(storageKey, JSON.stringify(state))\r\n  }\r\n}\r\n\r\nexport const getIntialState = (storageKey: string): any => {\r\n  if (typeof window !== 'undefined') {\r\n    const savedState = window.localStorage.getItem(storageKey)\r\n    try {\r\n      if (!savedState) {\r\n        return undefined\r\n      }\r\n      return JSON.parse(savedState ?? '{}')\r\n    } catch (e) {\r\n      console.error('Error loading state : ' + storageKey)\r\n      return undefined\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}