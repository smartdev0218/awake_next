{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\projects\\\\4.23\\\\awake-nextjs-refactored1\\\\src\\\\context\\\\auth.tsx\",\n    _getIntialState,\n    _initialState$jwt,\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useEffect, useMemo, useState } from 'react';\nimport cookieCutter from 'cookie-cutter';\nimport { axiosClient, setAuthTokenHeaders } from 'utils/axios-client';\nimport { getIntialState, persistState } from 'utils/persisted-state';\nvar STORAGE_KEY = 'awake-auth';\nvar defaultState = {};\nvar initialState = (_getIntialState = getIntialState(STORAGE_KEY)) !== null && _getIntialState !== void 0 ? _getIntialState : defaultState;\nsetAuthTokenHeaders((_initialState$jwt = initialState.jwt) !== null && _initialState$jwt !== void 0 ? _initialState$jwt : '');\nexport var AuthContext = /*#__PURE__*/createContext({});\nAuthContext.displayName = 'AuthContext';\nexport var AuthProvider = function AuthProvider(_ref) {\n  _s();\n\n  var _initialState$user, _initialState$jwt2;\n\n  var children = _ref.children;\n\n  var _useState = useState((_initialState$user = initialState.user) !== null && _initialState$user !== void 0 ? _initialState$user : null),\n      user = _useState[0],\n      setUser = _useState[1];\n\n  var _useState2 = useState((_initialState$jwt2 = initialState.jwt) !== null && _initialState$jwt2 !== void 0 ? _initialState$jwt2 : null),\n      jwt = _useState2[0],\n      setJwt = _useState2[1];\n\n  var signInWithSMS = function signInWithSMS(data) {\n    return axiosClient.post(\"send-sms-code\", data);\n  };\n\n  var confirmSMS = function confirmSMS(data) {\n    return axiosClient.post(\"confirm-sms-code\", data).then(function (_ref2) {\n      var data = _ref2.data;\n      var user = data.user;\n      var jwt = data.jwt;\n      setUser(user);\n      setJwt(jwt);\n      cookieCutter.set('jwt', jwt);\n      setAuthTokenHeaders(jwt);\n      return data;\n    })[\"catch\"](function (err) {\n      alert(err.message);\n    });\n  };\n\n  var logout = function logout() {\n    cookieCutter.set('jwt', null);\n    setAuthTokenHeaders(null);\n    setJwt(null);\n    setUser(null);\n    window.location.href = '/';\n  };\n\n  var fetchUser = function fetchUser() {\n    axiosClient.post('fetch-user').then(function (_ref3) {\n      var data = _ref3.data;\n      setUser(data);\n    })[\"catch\"](function () {\n      setUser(null);\n    });\n  };\n\n  var updateUser = function updateUser(data) {\n    axiosClient.post('update-user', data).then(function (_ref4) {\n      var data = _ref4.data;\n      setUser(data);\n    })[\"catch\"](function (err) {\n      console.error(err);\n      alert(err.message);\n    });\n  };\n\n  var value = useMemo(function () {\n    return {\n      user: user,\n      setUser: setUser,\n      jwt: jwt,\n      setJwt: setJwt,\n      signInWithSMS: signInWithSMS,\n      confirmSMS: confirmSMS,\n      logout: logout,\n      fetchUser: fetchUser,\n      updateUser: updateUser\n    };\n  }, [user, setUser, jwt, setJwt, signInWithSMS, confirmSMS, logout, fetchUser, updateUser]);\n  useEffect(function () {\n    return persistState(STORAGE_KEY, {\n      jwt: jwt,\n      user: user\n    });\n  }, [jwt, user]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(AuthProvider, \"CTzK7M2SOA0PZqdyW1W7jt8G/gk=\");\n\n_c = AuthProvider;\nexport var useAuth = function useAuth() {\n  _s2();\n\n  var context = useContext(AuthContext);\n\n  if (context === undefined) {\n    throw new Error('useAuth hook must be used within a AuthProvider component');\n  }\n\n  return context;\n};\n\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["E:/projects/4.23/awake-nextjs-refactored1/src/context/auth.tsx"],"names":["createContext","useContext","useEffect","useMemo","useState","cookieCutter","axiosClient","setAuthTokenHeaders","getIntialState","persistState","STORAGE_KEY","defaultState","initialState","jwt","AuthContext","displayName","AuthProvider","children","user","setUser","setJwt","signInWithSMS","data","post","confirmSMS","then","set","err","alert","message","logout","window","location","href","fetchUser","updateUser","console","error","value","useAuth","context","undefined","Error"],"mappings":"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","sourcesContent":["import {\r\n  createContext,\r\n  FC,\r\n  useContext,\r\n  useEffect,\r\n  useMemo,\r\n  useState,\r\n} from 'react'\r\nimport cookieCutter from 'cookie-cutter'\r\n\r\nimport { User } from 'models'\r\nimport { axiosClient, setAuthTokenHeaders } from 'utils/axios-client'\r\nimport { getIntialState, persistState } from 'utils/persisted-state'\r\n\r\nconst STORAGE_KEY = 'awake-auth'\r\n\r\nexport interface IAuthContext {\r\n  user: User | null\r\n  setUser: (user: User | null) => void\r\n  jwt: string | null\r\n  setJwt: (jwt: string | null) => void\r\n  signInWithSMS: (data: any) => Promise<any>\r\n  confirmSMS: (data: any) => Promise<any>\r\n  logout: () => void\r\n  fetchUser: () => void\r\n  updateUser: (data: any) => void\r\n}\r\n\r\nconst defaultState = {}\r\n\r\nconst initialState = getIntialState(STORAGE_KEY) ?? defaultState\r\n\r\nsetAuthTokenHeaders(initialState.jwt ?? '')\r\n\r\nexport const AuthContext = createContext<IAuthContext>({} as IAuthContext)\r\n\r\nAuthContext.displayName = 'AuthContext'\r\n\r\nexport const AuthProvider: FC = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(initialState.user ?? null)\r\n  const [jwt, setJwt] = useState<string | null>(initialState.jwt ?? null)\r\n\r\n  const signInWithSMS = (data) => axiosClient.post(`send-sms-code`, data)\r\n\r\n  const confirmSMS = (data) =>\r\n    axiosClient\r\n      .post(`confirm-sms-code`, data)\r\n      .then(({ data }) => {\r\n        const user = data.user as User\r\n        const jwt = data.jwt as string\r\n\r\n        setUser(user)\r\n        setJwt(jwt)\r\n        cookieCutter.set('jwt', jwt)\r\n        setAuthTokenHeaders(jwt)\r\n\r\n        return data\r\n      })\r\n      .catch((err) => {\r\n        alert(err.message)\r\n      })\r\n\r\n  const logout = () => {\r\n    cookieCutter.set('jwt', null)\r\n    setAuthTokenHeaders(null)\r\n    setJwt(null)\r\n    setUser(null)\r\n    window.location.href = '/'\r\n  }\r\n\r\n  const fetchUser = () => {\r\n    axiosClient\r\n      .post('fetch-user')\r\n      .then(({ data }) => {\r\n        setUser(data)\r\n      })\r\n      .catch(() => {\r\n        setUser(null)\r\n      })\r\n  }\r\n\r\n  const updateUser = (data: any) => {\r\n    axiosClient\r\n      .post('update-user', data)\r\n      .then(({ data }) => {\r\n        setUser(data)\r\n      })\r\n      .catch((err) => {\r\n        console.error(err)\r\n        alert(err.message)\r\n      })\r\n  }\r\n\r\n  const value = useMemo(\r\n    () => ({\r\n      user,\r\n      setUser,\r\n      jwt,\r\n      setJwt,\r\n      signInWithSMS,\r\n      confirmSMS,\r\n      logout,\r\n      fetchUser,\r\n      updateUser,\r\n    }),\r\n    [\r\n      user,\r\n      setUser,\r\n      jwt,\r\n      setJwt,\r\n      signInWithSMS,\r\n      confirmSMS,\r\n      logout,\r\n      fetchUser,\r\n      updateUser,\r\n    ]\r\n  )\r\n\r\n  useEffect(() => persistState(STORAGE_KEY, { jwt, user }), [jwt, user])\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>\r\n}\r\n\r\nexport const useAuth = (): IAuthContext => {\r\n  const context = useContext(AuthContext)\r\n  if (context === undefined) {\r\n    throw new Error('useAuth hook must be used within a AuthProvider component')\r\n  }\r\n  return context\r\n}\r\n"]},"metadata":{},"sourceType":"module"}